{"version":3,"sources":["Components/Modal/modal.component.jsx","Components/Header/header.component.jsx","Components/Actions/actions.component.jsx","Components/Option/option.component.jsx","Components/Options/options.component.jsx","Components/AddOptions/add-options.component.jsx","App.js","serviceWorker.js","index.js"],"names":["ModalWin","props","isOpen","selectedOption","onRequestClose","handleModal","contentLabel","closeTimeoutMS","ariaHideApp","className","onClick","Header","title","subtitle","defaultProps","Actions","disabled","hasOptions","handlePick","Option","div","initial","x","animate","transition","duration","count","optionText","button","e","handleDeleteOption","Options","handleDeleteOptions","options","length","map","option","index","key","AddOptions","handleAddOption","bind","state","error","undefined","preventDefault","target","elements","value","trim","this","handleAddOptions","setState","onSubmit","type","name","React","Component","App","randomNum","Math","floor","random","optionToRemove","prevState","filter","abc","jsonGet","localStorage","getItem","JSON","parse","prevProps","jsonSet","stringify","setItem","indexOf","concat","y","opacity","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.12049b43.chunk.js","sourcesContent":["import React from \"react\";\nimport Modal from \"react-modal\";\nimport \"./modal.styles.scss\";\n\nconst ModalWin = (props) => (\n  <Modal\n    isOpen={!!props.selectedOption}\n    onRequestClose={props.handleModal}\n    contentLabel=\"Text\"\n    closeTimeoutMS={200}\n    ariaHideApp={false}\n    className=\"modal\"\n  >\n    <h3 className=\"modal__title\">Selected Option</h3>\n    {props.selectedOption && (\n      <p className=\"modal__body\">{props.selectedOption}</p>\n    )}\n    <button onClick={props.handleModal} className=\"modal__button\">\n      Done\n    </button>\n  </Modal>\n);\n\nexport default ModalWin;\n","import React from \"react\";\nimport \"./header.styles.scss\";\n\nconst Header = (props) => (\n  <div className=\"header\">\n    <h1 className=\"container title\">{props.title}</h1>\n    {props.subtitle && <h2 className=\"container subtitle\">{props.subtitle}</h2>}\n  </div>\n);\n\nHeader.defaultProps = {\n  title: \"Indecision\",\n  subtitle: \"Let the computer decide\",\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./actions.styles.scss\";\n\nconst Actions = (props) => (\n  <div>\n    <button\n      className=\"big-button\"\n      disabled={!props.hasOptions}\n      onClick={props.handlePick}\n    >\n      What should I choose?\n    </button>\n  </div>\n);\n\nexport default Actions;\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport \"./option.styles.scss\";\n\nconst Option = (props) => {\n  return (\n    <motion.div\n      className=\"option\"\n      initial={{\n        x: 100,\n      }}\n      animate={{\n        x: 0,\n      }}\n      transition={{\n        duration: 0.3,\n      }}\n    >\n      <p className=\"option__text\">\n        {props.count}. {props.optionText}\n      </p>\n      <motion.button\n        initial={{ x: 100 }}\n        animate={{ x: 0 }}\n        className=\"button button--link\"\n        onClick={(e) => {\n          props.handleDeleteOption(props.optionText);\n        }}\n      >\n        Remove\n      </motion.button>\n    </motion.div>\n  );\n};\n\nexport default Option;\n","import React from \"react\";\nimport Option from \"../Option/option.component.jsx\";\nimport \"./options.styles.scss\";\n\nconst Options = (props) => (\n  <div>\n    <div className=\"widget-header\">\n      <h3>Your Options</h3>\n\n      <button\n        disabled={!props.hasOptions}\n        className=\"button button--link\"\n        onClick={props.handleDeleteOptions}\n      >\n        Remove All\n      </button>\n    </div>\n    {props.options.length === 0 && (\n      <p className=\"widget-message\">Please Add an option to get started</p>\n    )}{\" \"}\n    {props.options.map((option, index) => (\n      <Option\n        key={option}\n        optionText={option}\n        count={index + 1}\n        handleDeleteOption={props.handleDeleteOption}\n      />\n    ))}\n  </div>\n);\nexport default Options;\n","import React from \"react\";\nimport \"./add-options.styles.scss\";\n\nclass AddOptions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleAddOption = this.handleAddOption.bind(this);\n    this.state = {\n      error: undefined,\n    };\n  }\n  handleAddOption(e) {\n    e.preventDefault();\n    const option = e.target.elements.option.value.trim();\n    const error = this.props.handleAddOptions(option);\n    this.setState(() => ({ error }));\n    if (!error) {\n      e.target.elements.option.value = \"\";\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.error && (\n          <p className=\"add-option-error\">{this.state.error}</p>\n        )}\n        <form onSubmit={this.handleAddOption} className=\"add-option-form\">\n          <input className=\"add-option-input\" type=\"text\" name=\"option\"></input>\n          <button className=\"add-option-button\">Add Option</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddOptions;\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport ModalWin from \"./Components/Modal/modal.component.jsx\";\nimport Header from \"./Components/Header/header.component.jsx\";\nimport Actions from \"./Components/Actions/actions.component.jsx\";\nimport Options from \"./Components/Options/options.component.jsx\";\nimport AddOptions from \"./Components/AddOptions/add-options.component.jsx\";\nimport \"normalize.css/normalize.css\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDeleteOptions = this.handleDeleteOptions.bind(this);\n    this.handlePick = this.handlePick.bind(this);\n    this.handleAddOptions = this.handleAddOptions.bind(this);\n    this.handleDeleteOption = this.handleDeleteOption.bind(this);\n    this.handleModal = this.handleModal.bind(this);\n    this.state = {\n      options: [],\n      selectedOption: props.selectedOption,\n      abc: 1,\n    };\n  }\n  componentDidMount() {\n    try {\n      const jsonGet = localStorage.getItem(\"options\");\n      const options = JSON.parse(jsonGet);\n      if (options) {\n        this.setState(() => ({\n          options,\n        }));\n      }\n    } catch (e) {\n      //Do nothing\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.options.length !== this.state.options.length) {\n      const jsonSet = JSON.stringify(this.state.options);\n      localStorage.setItem(\"options\", jsonSet);\n    }\n  }\n\n  handleModal = () => {\n    this.setState(() => ({\n      selectedOption: undefined,\n    }));\n  };\n\n  handleDeleteOptions = () => {\n    this.setState(() => ({\n      options: [],\n    }));\n  };\n\n  handlePick = () => {\n    const randomNum = Math.floor(Math.random() * this.state.options.length);\n    const option = this.state.options[randomNum];\n    this.setState(() => ({\n      selectedOption: option,\n    }));\n  };\n\n  handleDeleteOption = (optionToRemove) => {\n    this.setState((prevState) => ({\n      options: prevState.options.filter((option) => {\n        return optionToRemove !== option;\n      }),\n    }));\n  };\n\n  handleAddOptions(option) {\n    if (!option) {\n      return \"Please enter a value to add\";\n    } else if (this.state.options.indexOf(option) > -1) {\n      return \"This option already exists\";\n    }\n    this.setState((prevState) => ({\n      options: prevState.options.concat([option]),\n    }));\n  }\n\n  render() {\n    return (\n      <motion.div\n        className=\"App\"\n        initial={{\n          y: 100,\n          opacity: 0,\n        }}\n        animate={{\n          y: 0,\n          opacity: 1,\n        }}\n        transition={{\n          duration: 0.5,\n        }}\n      >\n        <Header />\n        <div className=\"container\">\n          <Actions\n            hasOptions={this.state.options.length > 0}\n            handlePick={this.handlePick}\n          />\n          <div className=\"widget\">\n            <Options\n              options={this.state.options}\n              handleDeleteOptions={this.handleDeleteOptions}\n              handleDeleteOption={this.handleDeleteOption}\n              hasOptions={this.state.options.length > 0}\n            />\n            <AddOptions handleAddOptions={this.handleAddOptions} />\n          </div>\n\n          <ModalWin\n            handleModal={this.handleModal}\n            selectedOption={this.state.selectedOption}\n          />\n        </div>\n      </motion.div>\n    );\n  }\n}\n\nApp.defaultProps = {\n  selectedOption: undefined,\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}